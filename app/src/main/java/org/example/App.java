/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.example;

import java.util.ArrayList;
import java.util.List;

import org.example.controllers.StartController;
import org.example.controllers.UsersController;
import org.example.seeders.Seeder;

import io.undertow.Handlers;
import io.undertow.Undertow;
import io.undertow.server.HttpHandler;
import io.undertow.server.RoutingHandler;
import io.undertow.server.handlers.accesslog.AccessLogHandler;

public class App {

    private static final java.util.logging.Logger log = java.util.logging.Logger.getLogger(App.class.getName());

    public static void main(String[] args) {
        RoutingHandler routingHandler = Handlers.routing()
                .addAll(StartController.handlers())
                .addAll(UsersController.handlers());

        HttpHandler rootHandler = new AccessLogHandler(
                ExceptionHandlers.wrap(routingHandler),
                (message) -> log.info(message),
                "combined",
                App.class.getClassLoader());

        Undertow.builder()
                .addHttpListener(8080, "0.0.0.0")
                .setHandler(rootHandler)
                .build()
                .start();

        // DB seeding tasks
        Seeder.generateTables();

        List<String> usersColumns = new ArrayList<>();
        usersColumns.add("firstname");
        usersColumns.add("lastname");
        Seeder.seedEntities(100, "USERS", usersColumns);

        List<String> addressesColumns = new ArrayList<>();
        addressesColumns.add("line1");
        addressesColumns.add("city");
        addressesColumns.add("postalcode");
        addressesColumns.add("stateprovince");
        addressesColumns.add("countryid");
        Seeder.seedEntities(100, "ADDRESSES", addressesColumns);

        // for random user_id's between 1 to 100,
        // randomly associate none, one, or more addresses by id
        // via the join table USERSADDRESSES
        Seeder.attachUsersTo(100, "USERSADDRESSES", "address_id");
    }

}
